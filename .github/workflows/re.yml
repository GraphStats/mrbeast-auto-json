name: Auto Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Read and bump version
      id: version
      run: |
        set -e  # Stoppe si erreur
        VERSION_FILE="vertion.json"

        # Créer vertion.json si absent
        if [ ! -f $VERSION_FILE ]; then
          echo '{"vertion":"V1.0.0"}' > $VERSION_FILE
          echo "$VERSION_FILE created with version V1.0.0"
        fi

        # Lire version actuelle
        version=$(node -pe "require('./$VERSION_FILE').vertion")
        echo "Current version: $version"

        # Supprimer 'V' et séparer en majeur, mineur, patch
        version_numbers=${version#V}
        IFS='.' read -r major minor patch <<< "$version_numbers"

        # Incrémenter patch
        patch=$((patch + 1))

        # Gestion overflow
        if [ $patch -gt 9 ]; then
          patch=0
          minor=$((minor + 1))
        fi
        if [ $minor -gt 9 ]; then
          minor=0
          major=$((major + 1))
        fi

        new_version="V$major.$minor.$patch"
        echo "New version: $new_version"

        # Mettre à jour vertion.json proprement
        node -e "const fs = require('fs'); const data = {vertion:'$new_version'}; fs.writeFileSync('$VERSION_FILE', JSON.stringify(data, null, 2));"

        # Exporter pour steps suivants
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Commit new version
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add vertion.json
        git diff --cached --quiet || git commit -m "Bump version to ${{ env.new_version }}"
        git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:main

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.new_version }}
        name: ${{ env.new_version }}
        draft: false
        prerelease: false
